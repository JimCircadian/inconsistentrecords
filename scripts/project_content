#!/usr/bin/env python

import argparse
import logging
import os

from utils import github_conn

import github


def get_args():
    a = argparse.ArgumentParser()
    a.add_argument("user", help="Username to generate content for")
    return a.parse_args()


template_str = """
name: {name}
---
url: {url}
---
date: {date}
---
summary: 

<pre>
{summary}
</pre>
---
about: {about}
---
description: {summary}
"""


if __name__ == "__main__":
    logging.info("Generating content for projects")

    args = get_args()
    conn = github_conn()

    repos = [repo for repo in conn.search_repositories(
        query='user:{}'.format(args.user)
    ) if not repo.private]

    for repo in repos:
        logging.info("Creating project content for {}".format(repo.name))
        directory = os.path.join("content", "projects", repo.name)

        os.makedirs(directory, exist_ok=True)

        readme = repo.get_readme().decoded_content.decode()

        try:
            about = repo.get_contents("ABOUT.md").decoded_content.decode()
        except github.GithubException:
            about = ""

        with open(os.path.join(directory, "contents.lr"), "w") as fh:
            fh.write(template_str.format(
                name=repo.name,
                url=repo.html_url,
                date=repo.pushed_at,
                summary=readme,
                about=about,
                description=repo.description
            ))
